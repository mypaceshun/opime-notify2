name: AWS Lambda deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-lateset
    permissions:
      id-token: write
      conents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GithubActions

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: "1.8.2"
          virtualenvs-create: true
          virtualenvs-in-project: true

      - uses: actions/cache@v4
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Lambda update
        run: |
          poetry install --with ci
          zip -r package.zip src/
          poetry run awscli almmbda update-function-code --function-name opimeNotify --zip-file fileb://package.zip --publish
